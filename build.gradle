buildscript {
    repositories {
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }
    dependencies {
        classpath "io.eventuate.plugins.gradle:eventuate-plugins-gradle-versions:$eventuatePluginsGradleVersion"
        classpath "io.eventuate.plugins.gradle:eventuate-plugins-gradle-publish:$eventuatePluginsGradleVersion"
    }
}

allprojects {
    group = "io.eventuate.tram.springcloudsleuth"
}

apply plugin: "io.eventuate.plugins.gradle.publish.EventuatePublish"

allprojects {

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }


    if (!project.name.endsWith("-bom")) {

      dependencies {
          implementation(platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"))
          implementation(platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion"))
          implementation(platform("io.eventuate.tram.core:eventuate-tram-bom:$eventuateTramVersion"))

          testImplementation "org.springframework.boot:spring-boot-starter-test"

      }

      test {
            useJUnitPlatform()
      }

    }
}



gradle.projectsEvaluated {
    task aggregateJavaDocs(type: Javadoc) {
        description = 'Aggregated Javadoc API documentation of all subprojects.'
        group = JavaBasePlugin.DOCUMENTATION_GROUP

        destinationDir file("$buildDir/docs/javadoc")
    }

    task("aggregateJavaDocsJar", type: org.gradle.api.tasks.bundling.Jar, dependsOn: project.aggregateJavaDocs) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    artifacts {
        archives project.aggregateJavaDocsJar
    }

}

